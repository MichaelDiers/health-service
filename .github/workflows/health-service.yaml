name: Health Service
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  production:
    runs-on: ubuntu-latest
    permissions: write-all
    environment: production
    env:
      DESCRIPTION: ${{ secrets.DESCRIPTION }}
      DOCS: ${{ secrets.DOCS }}
      DOCS_DIR: docs
      GCLOUD_DEPLOYMENT_SERVICE_ACCOUNT: ${{ secrets.GCLOUD_DEPLOYMENT_SERVICE_ACCOUNT }}
      GCLOUD_RUNNER_SERVICE_ACCOUNT: ${{ secrets.GCLOUD_RUNNER_SERVICE_ACCOUNT }}
      GCLOUD_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCLOUD_WORKLOAD_IDENTITY_PROVIDER }}
      HEALTH_SERVICE_ACCESS_CONTROL_ALLOW_ORIGIN: ${{ secrets.HEALTH_SERVICE_ACCESS_CONTROL_ALLOW_ORIGIN }}
      HEALTH_SERVICE_API_KEY: ${{ secrets.HEALTH_SERVICE_API_KEY }}
      HEALTH_SERVICE_API_KEY_HEADER_NAME: ${{ secrets.HEALTH_SERVICE_API_KEY_HEADER_NAME }}
      HEALTH_SERVICE_HTTP_CHECKS: ${{ secrets.HEALTH_SERVICE_HTTP_CHECKS }}
      HEALTH_SERVICE_PORT: ${{ secrets.HEALTH_SERVICE_PORT }}
      HEALTH_SERVICE_USERS_GRPC_SERVICE_API_KEY: ${{ secrets.HEALTH_SERVICE_USERS_GRPC_SERVICE_API_KEY }}
      HEALTH_SERVICE_USERS_GRPC_SERVICE_URL: ${{ secrets.HEALTH_SERVICE_USERS_GRPC_SERVICE_URL }}
      SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
      SOURCE: ${{ secrets.SOURCE }}
      HEALTH_SERVICE_USERS_SERVICE_REST_URL: ${{ secrets.HEALTH_SERVICE_USERS_SERVICE_REST_URL }}
      HEALTH_SERVICE_USERS_SERVICE_REST_API_KEY: ${{ secrets.HEALTH_SERVICE_USERS_SERVICE_REST_API_KEY }}
      HEALTH_SERVICE_AUTHENTICATION_SERVICE: ${{ secrets.HEALTH_SERVICE_AUTHENTICATION_SERVICE }}
      HEALTH_SERVICE_AUTHENTICATION_SERVICE_API_KEY: ${{ secrets.HEALTH_SERVICE_AUTHENTICATION_SERVICE_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: update Dockerfile
        run: |
          echo "ENV HEALTH_SERVICE_ACCESS_CONTROL_ALLOW_ORIGIN=${{ env.HEALTH_SERVICE_ACCESS_CONTROL_ALLOW_ORIGIN }}" >> ${{ env.SOURCE }}/Dockerfile
          echo "ENV HEALTH_SERVICE_API_KEY=${{ env.HEALTH_SERVICE_API_KEY }}" >> ${{ env.SOURCE }}/Dockerfile
          echo "ENV HEALTH_SERVICE_API_KEY_HEADER_NAME=${{ env.HEALTH_SERVICE_API_KEY_HEADER_NAME }}" >> ${{ env.SOURCE }}/Dockerfile
          echo "ENV HEALTH_SERVICE_HTTP_CHECKS=\"${{ env.HEALTH_SERVICE_HTTP_CHECKS }}\"" >> ${{ env.SOURCE }}/Dockerfile
          echo "ENV HEALTH_SERVICE_PORT=${{ env.HEALTH_SERVICE_PORT }}" >> ${{ env.SOURCE }}/Dockerfile
          echo "ENV HEALTH_SERVICE_USERS_GRPC_SERVICE_API_KEY=${{ env.HEALTH_SERVICE_USERS_GRPC_SERVICE_API_KEY }}" >> ${{ env.SOURCE }}/Dockerfile
          echo "ENV HEALTH_SERVICE_USERS_GRPC_SERVICE_URL=${{ env.HEALTH_SERVICE_USERS_GRPC_SERVICE_URL }}" >> ${{ env.SOURCE }}/Dockerfile
          echo "ENV HEALTH_SERVICE_USERS_SERVICE_REST_URL=${{ env.HEALTH_SERVICE_USERS_SERVICE_REST_URL }}" >> ${{ env.SOURCE }}/Dockerfile
          echo "ENV HEALTH_SERVICE_USERS_SERVICE_REST_API_KEY=${{ env.HEALTH_SERVICE_USERS_SERVICE_REST_API_KEY }}" >> ${{ env.SOURCE }}/Dockerfile
          echo "ENV HEALTH_SERVICE_AUTHENTICATION_SERVICE=${{ env.HEALTH_SERVICE_AUTHENTICATION_SERVICE }}" >> ${{ env.SOURCE }}/Dockerfile
          echo "ENV HEALTH_SERVICE_AUTHENTICATION_SERVICE_API_KEY=${{ env.HEALTH_SERVICE_AUTHENTICATION_SERVICE_API_KEY }}" >> ${{ env.SOURCE }}/Dockerfile
          echo "EXPOSE ${{ env.HEALTH_SERVICE_PORT }}" >> ${{ env.SOURCE }}/Dockerfile      
          echo "CMD [\"node\", \"dist/main\"]" >> ${{ env.SOURCE }}/Dockerfile
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'id_token'
          workload_identity_provider: '${{ env.GCLOUD_WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ env.GCLOUD_DEPLOYMENT_SERVICE_ACCOUNT }}'
          id_token_audience: '${{ env.GCLOUD_WORKLOAD_IDENTITY_PROVIDER }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: 'Use gcloud CLI'
        run: 'gcloud run deploy "${{ env.SERVICE_NAME }}" --source ${{ env.SOURCE }} --allow-unauthenticated --description="${{ env.DESCRIPTION }}" --region=us-central1 --port=${{ env.HEALTH_SERVICE_PORT }} --service-account=${{ secrets.GCLOUD_RUNNER_SERVICE_ACCOUNT }}'
      - name: install gh-pages and compodoc
        run: npm install gh-pages @compodoc/compodoc --prefix ${{ env.SOURCE }}
      - name: create docs
        run: npx @compodoc/compodoc -p tsconfig.json -n "${{ env.DOCS }} (v${{ github.run_number }})" -d ${{ env.DOCS_DIR }}
        working-directory: ${{ env.SOURCE }}
      - name: Deploy with gh-pages
        run: |
          git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          npx gh-pages -d ${{ env.DOCS_DIR }} -u "github-actions-bot <support+actions@github.com>"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ${{ env.SOURCE }}
